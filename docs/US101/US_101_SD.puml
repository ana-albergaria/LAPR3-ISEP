@startuml
autonumber
'hide footbox
actor "Traffic Manager" as TM
participant ":ImportShipsUI  " as UI
participant ":ImportShipsController" as CTRL
participant ":TestFileUtils" as TFU
participant ":Company" as CMP
participant ":ShipsBST" as SBST
participant ":Ship" as SHIP
participant ":PositionBST" as PBST
participant ":ShipPosition" as POS

activate TM
TM -> UI : asks to import ships from a text file into a BST
activate UI
UI -> CTRL** : create()
UI --> TM : asks for data(i.e., pathOfFile)
deactivate UI
TM -> UI : types requested data
activate UI
UI -> TFU** : create()
activate TFU
UI -> TFU : List<ShipsFileDTO>shipsOfFile = getShipsDataToDTO(pathOfFile)
deactivate TFU
UI -> CTRL : importShipsFromFile(shipsFileDTO)
activate CTRL
alt for each ShipsFileDTO of the list
alt if ship doesn't exist in the system
CTRL --> SHIP** : create(positionsBST, mmsi, vesselName, IMO, callSign, vesselType, leength, width, draft, cargo)
else if ship already exists in the system
CTRL -> CMP : getBstShip()
activate CMP
CMP --> CTRL : ShipsBST
deactivate CMP
CTRL -> SBST : getShipByMmsiCode(shipsFileDTO.getMmsi());
activate SBST
SBST --> CTRL : Ship
deactivate SBST
end
CTRL --> POS** : create(mmsi, baseDateTime, lat, lon)
alt if position doesn't exist in the system
CTRL -> SHIP : getPositionsBST()
activate SHIP
SHIP -> CTRL : PositionBST
deactivate SHIP
CTRL -> PBST : savePosition(shipPosition)
activate PBST
|||
deactivate PBST
CTRL -> SHIP : setPositionsBST(positionsBST)
activate SHIP
|||
deactivate SHIP
CTRL -> SBST : saveShip(ship)
activate SBST
|||
deactivate SBST
end
end
CTRL --> UI : result
deactivate CTRL
UI --> TM : informs of operation success or fail
deactivate UI
deactivate TM

@enduml

@startuml
'https://plantuml.com/class-diagram

skinparam classAttributeIconSize 0

class Company{
    -designation
    +getShipBst()
}
class BST{
    +size()
}


class Ship {
    -mmmsiCode
    -shipName
    -imoCode
    -callSignId
    -draft
    -vesselTypeID
    -length
    -width
    -cargo
    +getName()
    +getMovements()
    +getMMSI()
    +getPositionsBST()
}

class ShipsBST{
    +findShipByMmsi(MMSI)
    +getShipByBaseDateTime(initialBaseDate, finalBaseDate)
    +sortNShips(shipList)
    +getShipWithMean(sortedShips, N)
    +getShipByMmsiCode(mmsiCode)
    +getPairsOfShips()
    +getShipsInOrderWithIntendedTD()
    +fillTreeMapForEachShip(listShipsWithIntendedTD, infoPair, \ntravelledDistance, positionsBST, ship1MMSI, indexShip)
}

class ShipsBSTImo{
    +findShipByImo(imo)
}
class ShipsBSTCallSign{
     +findShipByCallsign(callsign)
 }

class ShipStore{
   +Ship findShipByAnyCode(code)
   +getShipsBstMmsi()
}
class ShipPosition{
    -baseDateTime
    -latitude
    -longitude
    -sog
    -cog
    -heading
    -position
    -transceiver
    +getPositionsBST()
    +getLatitude()
    +getLongitude()
    +getBaseTime()
    +getSog()
    +getCog()
}

class PositionsBST {
    +getStartDate()
    +getEndDate()
    +getMaxSog()
    +getMeanSog()
    +getMeanCog()
    +getDepartLatitude()
    +getDepartLongitude()
    +getArrivalLatitude()
    +getArrivalLongitude()
    +getTravelDistance()
    +getDeltaDistance()
    +getShipBaseDateTime(code)
    +getPositinalMessages(initialDate, finalDate)
    +getTotalDistance()
    +getArrivalDistance()
    +getDepartureDistance()
}


class MovementSummaryController {
+getShipMovementSummary(MMSI)
}

class MovementSummaryDto{
    name
    startDate
    endDate
    maxSog
    meanSog
    meanCog
    departLatitude
    departLongitude
    arrivalLatitude
    arrivalLongitude
    travelledDist
    deltaDist
}

class AllShipMMSIController {
    +sortedByTravelledDistance()
    +sortedByTotalMovements()
}

class TopNController {
    +getShipByBaseDateTime(initialBaseDate, finalBaseDate)
    +getShipWithMean(sortedShips)
}

class ShowPositionalMessagesController {
    +isValidShip(mmsiCode)
    +showPositionalMessages(initialDate, finalDate)
}

class ShowPairsOfShipsController {
    +getPairsOfShips()
}

MovementSummaryController ..> Company
MovementSummaryController ..> ShipStore
MovementSummaryController -- MovementSummaryDto: creates >
Company "1" --> "*" Ship : knows
Company "1" -- "1" ShipStore : uses >
ShipStore "1" -- "1" ShipsBSTCallSign : uses >
ShipStore "1" -- "1" ShipsBST : uses >
ShipStore "1" -- "1" ShipsBSTImo : uses >
ShipsBST ..> Ship
ShipsBSTImo ..> Ship
ShipsBSTCallSign ..> Ship
Ship "1" -- "*" ShipPosition : sends >
Ship "1" -- "1" PositionsBST : uses >
/'PositionsBST ..> ShipPosition'/
/'ShipsBST ..> BST'/
ShipsBSTImo ..> BST
ShipsBSTCallSign ..> BST
/'PositionsBST ..> BST'/
AllShipMMSIController ..> ShipsBST
AllShipMMSIController ..> Company
TopNController ..> ShipsBST
TopNController ..> Company
/'US103'/
Company "1" -- "1" ShipsBST : uses >
ShipsBST "1" -- "1..*" Ship : owns >
/'Ship "1" -- "1" PositionsBST : uses >'/
PositionsBST "1" -- "1..*" ShipPosition : has >
ShowPositionalMessagesController ..> Company
ShowPositionalMessagesController ..> ShipsBST
ShowPositionalMessagesController ..> Ship
ShowPositionalMessagesController ..> PositionsBST
/'US107'/
ShowPairsOfShipsController ..> Company
ShowPairsOfShipsController ..> ShipsBST
ShowPairsOfShipsController ..> Ship
ShowPairsOfShipsController ..> PositionsBST

BST <|- PositionsBST
BST <|- ShipsBST


@enduml
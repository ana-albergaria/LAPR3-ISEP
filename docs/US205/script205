--get port id
create or replace FUNCTION get_port(mmsi ship.mmsi%type) return integer
IS
    x Port.port_id%type;

    unload_id ShipTrip.unloading_cargo_id%type;
	location ShipTrip.arrival_location%type;
	arrival_date ShipTrip.real_arrival_date%type;
    departure_date ShipTrip.real_departure_date%type;
CURSOR ship_trips(trip ShipTrip.MMSI%type) IS
SELECT unloading_cargo_id, arrival_location, real_arrival_date, real_departure_date
FROM ShipTrip
WHERE mmsi=trip;

BEGIN
OPEN ship_trips(mmsi);
LOOP
FETCH ship_trips INTO unload_id, location, arrival_date, departure_date;
		EXIT WHEN ship_trips%notfound;

		IF arrival_date = null AND departure_date != null THEN
SELECT port_id INTO x FROM Port WHERE location_id=location;
return x;

END IF;
END LOOP;
CLOSE ship_trips;
END;

--get list of offloaded containers
create or replace function offloaded(mmsi ship.mmsi%type) return SYS_REFCURSOR
is
    container_cursor SYS_REFCURSOR;


    unload_id ShipTrip.unloading_cargo_id%type;
	location ShipTrip.arrival_location%type;
	arrival_date ShipTrip.real_arrival_date%type;
    departure_date ShipTrip.real_departure_date%type;
CURSOR ship_trips(trip ShipTrip.MMSI%type) IS
SELECT unloading_cargo_id, arrival_location, real_arrival_date, real_departure_date
FROM ShipTrip
WHERE mmsi=trip;


begin
OPEN ship_trips(mmsi);
LOOP
FETCH ship_trips INTO unload_id, location, arrival_date, departure_date;
		EXIT WHEN ship_trips%notfound;

		IF arrival_date = null AND departure_date != null THEN
            open container_cursor for
select container.container_id, container.isocode, container.payload, positioninvehicule.containerpositionx, positioninvehicule.containerpositiony, positioninvehicule.containerpositionz
from container, positioninvehicule
where cargomanifest_id = unload_id;
return (container_cursor);
END IF;
END LOOP;
CLOSE ship_trips;
end;